// weather.js
function loadWeather() {
    const API_URL = "https://api.open-meteo.com/v1/forecast?latitude=55.0415&longitude=82.9346&hourly=temperature_2m&timezone=Asia%2FBangkok&forecast_days=1";
    const output = document.getElementById("weather-data");
    
    output.innerHTML = '<div class="loading">‚è≥ –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...</div>';
    
    fetch(API_URL)
        .then(response => {
            if (!response.ok) throw new Error("–û—à–∏–±–∫–∞: " + response.status);
            return response.json();
        })
        .then(data => {
            console.log("–û—Ç–≤–µ—Ç API:", data); // –î–ª—è –æ—Ç–ª–∞–¥–∫–∏
            
            if (!data.hourly?.time || !data.hourly?.temperature_2m) {
                throw new Error("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞");
            }
            
            const times = data.hourly.time;
            const temps = data.hourly.temperature_2m;
            const currentDate = new Date().toISOString().split("T")[0];
            
            // –í—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ —á–∞—Å—ã (–¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏)
            let html = "<h2>üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤ –ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫–µ:</h2><ul>";
            let hasData = false;
            
            times.forEach((time, index) => {
                const [date, fullHour] = time.split("T");
                const hour = fullHour.slice(0, 5);
                
                if (date === currentDate) {
                    html += `
                        <li>
                            <span class="time">üïí ${hour}</span>
                            <span class="temp">${temps[index]}¬∞C</span>
                        </li>
                    `;
                    hasData = true;
                }
            });
            
            html += "</ul>";
            
            if (!hasData) html = "<p>‚ùå –î–∞–Ω–Ω—ã–µ –∑–∞ —Å–µ–≥–æ–¥–Ω—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç.</p>";
            output.innerHTML = html;
        })
        .catch(error => {
            console.error("–û—à–∏–±–∫–∞:", error); 
            output.innerHTML = `<p class="error">‚ö†Ô∏è ${error.message}</p>`;
        });
}